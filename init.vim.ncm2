 " Install Vim Plug if not installed
    if empty(glob('~/.config/nvim/autoload/plug.vim'))
      silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      autocmd VimEnter * PlugInstall
    endif
call plug#begin()

" Fancy startup screen
Plug 'mhinz/vim-startify'

" Autocomplete
Plug 'ncm2/ncm2'
Plug 'roxma/nvim-yarp'
Plug 'ncm2/ncm2-bufword'
Plug 'ncm2/ncm2-path'


" Asynchrynous Linting Engine
Plug 'neomake/neomake'

"Javascript Plugins
Plug 'ncm2/ncm2-tern',  {'do': 'npm install'}

" Javascript syntax and indentation
Plug 'pangloss/vim-javascript'

"Typescript Plugins
Plug 'HerringtonDarkholme/yats.vim'
Plug 'ncm2/nvim-typescript', {'do': './install.sh'}
  
"Python Plugins
Plug 'ncm2/ncm2-jedi'

" python syntax highlighting and more
Plug 'numirias/semshi', { 'do': ':UpdateRemotePlugins', 'for': 'python' }

" C/C++ completion
Plug 'zchee/deoplete-clang'
Plug 'Shougo/neoinclude.vim'

" C/C++ syntax
Plug 'vim-jp/vim-cpp'

" Solidity Ethereum syntax
Plug 'tomlion/vim-solidity'

" Better Language Packs
"Plug 'sheerun/vim-polyglot'

" highlight URLs inside vim
Plug 'itchyny/vim-highlighturl'

" open URL in browser
Plug 'tyru/open-browser.vim'

" Terminal Vim with 256 colours
Plug 'fisadev/fisa-vim-colorscheme'

" NeoSolarized truecolor theme
Plug 'iCyMind/NeoSolarized'

" Automatically close parentheses etc.
Plug 'Townk/vim-autoclose'

" neovim-qt
" Plug 'equalsraf/neovim-gui-shim'

" Airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Display indentation lines
Plug 'Yggdroot/indentLine'

" Commenter
Plug 'scrooloose/nerdcommenter'

" Tree browser
Plug 'scrooloose/nerdtree'

" Code Folding
Plug 'tmhedberg/SimpylFold'

" handy unix command inside Vim (Rename, Move etc.)
Plug 'tpope/vim-eunuch'


" Initialise plugin system
call plug#end()

"{{ vim-plug settings
" use shortnames for common vim-plug command to reduce typing
" To use these shortcut: first activate command line with `:`, then input the
" short alias name, e.g., `pi`, then press <space>, the alias will be expanded
" to the original command automatically
call Cabbrev('pi', 'PlugInstall')
call Cabbrev('pud', 'PlugUpdate')
call Cabbrev('pug', 'PlugUpgrade')
call Cabbrev('ps', 'PlugStatus')
call Cabbrev('pc', 'PlugClean')
"}}

" Put your non-Plugin stuff after this line
"========================================================
"Neovim settings

" ncm2-pyclang settings
let g:ncm2_pyclang#library_path='/opt/clang/lib/libclang.so'
let g:ncm2_pyclang#args_file_path = ['.clang_complete']

" Neomake settings
" ================
let g:neomake_python_enabled_makers = ['flake8']
let g:neomake_javascript_enabled_makers = ['eslint']
call neomake#configure#automake('nrwi', 500)
let g:neomake_open_list = 2

" Neoformat settings
" ==================
" convert tabs to spaces, align and strip trailing spaces
let g:neoformat_basic_format_align = 1
let g:neoformat_basic_format_retab = 1
let g:neoformat_basic_format_trim = 1
let g:neoformat_enabled_python = ['yapf']
let g:neoformat_enabled_javascript = ['prettier']

" Change mapleader to comma ','
let mapleader = ',' 

" Line numbers
set number relativenumber

"tabs and spaces
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Set for UTF-8
set encoding=utf-8

" Enable syntax highlighting
syntax enable

"Clipboard settings - unnamed for Windows or MacOS
" unnamedplus for Unix/Linux
set clipboard^=unnamed,unnamedplus

" Copy to clipboard
vnoremap  <leader>y  "+y
nnoremap  <leader>Y  "+yg_
nnoremap  <leader>y  "+y
nnoremap  <leader>yy  "+yy

" Paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>p "+p
vnoremap <leader>P "+P


" Set character for indented lines
let g:indentLine_char = '‚îÜ'
 
" Key combos for split screens:
"
"    Ctrl+J move to the split below
"    Ctrl+K move to the split above
"    Ctrl+L move to the split to the right
"    Ctrl+H move to the split to the left
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Default python locations
" let g:python_host_prog = '/usr/bin/python2'

let g:python3_host_prog = '/home/jason/anaconda3/bin/python3'

" fix problems with uncommon shells (fish, xonsh) and plugins running commands
" (neomake, ...)
" For Linux, set shell as:
set shell=/bin/bash  
" For Termux
" set shell=/data/data/com.termux/files/usr/bin/bash

" Airline ------------------------------
let g:airline_powerline_fonts = 1
let g:airline_theme = 'papercolor'
let g:airline#extensions#whitespace#enabled = 0

"Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1

"Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'


" Airline unicode symbols
" Uncomment these and disable the Powerline symbols to use
"let g:airline_left_sep = '‚ñ∂'
"let g:airline_right_sep = '‚óÄ'
"let g:airline_left_sep = '¬ª'
"let g:airline_right_sep = '¬´'
"let g:airline_symbols.readonly = 'üîí'
"let g:airline_symbols.linenr = '‚ò∞'
"let g:airline_symbols.maxlinenr = '„èë'
"let g:airline_symbols.branch = '‚éá'
"let g:airline_symbols.paste = 'œÅ'
"let g:airline_symbols.notexists = '‚àÑ'

" Colour schemes

set guifont=Roboto\ Mono\ for\ Powerline\ 14
set termguicolors
set background=dark
colorscheme NeoSolarized

" Fisadev's dark colour scheme is a nice alternative in text mode
" let &t_Co = 256
" colorscheme fisa
" AirlineTheme bubblegum

" Two new user-defined commands to select Fisa or NeoSolarized colours
" with matching Airline themes (bubblegum and papercolor respectively)
command SolarPaper set termguicolors | set background=dark | colorscheme NeoSolarized | AirlineTheme papercolor
command Fisa let &t_Co =256 | colorscheme fisa | AirlineTheme bubblegum

